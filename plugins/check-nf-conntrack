#!/usr/bin/perl

=head1 NAME

check-nf-conntrack - Plugin to check the nf-conntrack-table.

=head1 SYNOPSIS

    check-nf-conntrack [ OPTIONS ]

    check-nf-conntrack --help

=head1 REPORTING BUGS

Please report all bugs to <support(at)bloonix.de>.

=head1 AUTHOR

Jonny Schulz <support(at)bloonix.de>.

=head1 POWERED BY

     _    __ _____ _____ __  __ __ __   __
    | |__|  |     |     |  \|  |__|\  \/  /
    |  . |  |  |  |  |  |      |  | >    <
    |____|__|_____|_____|__|\__|__|/__/\__\

=head1 COPYRIGHT

Copyright (C) 2016 by Jonny Schulz. All rights reserved.

=cut

use strict;
use warnings;
use Bloonix::Plugin;

# --------------------------------------------------
# Plugin options
# --------------------------------------------------

my $plugin = Bloonix::Plugin->new(version => "0.2");

$plugin->example(
    description => "A simple example",
    arguments => [
        warning => "usedper:ge:80",
        critical => "usedper:ge:90"
    ]
);

$plugin->has_threshold(
    keys => [
        { key => "count" },
        { key => "free" },
        { key => "usedper", unit => "percent" }
    ]
);

# --------------------------------------------------
# Parse options
# --------------------------------------------------

my $opt = $plugin->parse_options;

# --------------------------------------------------
# Load memory statistics
# --------------------------------------------------

my %stat = ();

foreach my $file (qw(nf_conntrack_count nf_conntrack_max)) {
    open my $fh, "<", "/proc/sys/net/netfilter/$file"
        or die "cannot open /proc/sys/net/netfilter/$file - $!";
    my $key = $file;
    $key =~ s/.+_//;
    my $value = <$fh>;
    chomp $value;
    if ($value !~ /^\d+\z/) {
        $value = 0;
    }
    $stat{$key} = $value;
}

$stat{usedper} = sprintf("%.2f", 100 * $stat{count} / $stat{max});
$stat{free} = $stat{max} - $stat{count};

my $result = $plugin->check_thresholds(
    stats => \%stat,
    upshot_keys => [qw(count max usedper)]
);

$plugin->exit(
    status => $result->{status},
    message => $result->{upshot},
    stats => \%stat
);
