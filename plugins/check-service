#!/usr/bin/perl

=head1 NAME

check-service - Plugin to check services.

=head1 SYNOPSIS

    check-service [ OPTIONS ]

    check-service --help

=head1 REPORTING BUGS

Please report all bugs to <support(at)bloonix.de>.

=head1 AUTHOR

Jonny Schulz <support(at)bloonix.de>.

=head1 POWERED BY

     _    __ _____ _____ __  __ __ __   __
    | |__|  |     |     |  \|  |__|\  \/  /
    |  . |  |  |  |  |  |      |  | >    <
    |____|__|_____|_____|__|\__|__|/__/\__\

=head1 COPYRIGHT

Copyright (C) 2009-2014 by Jonny Schulz. All rights reserved.

=cut

use strict;
use warnings;
use Bloonix::Plugin;

# --------------------------------------------------
# Plugin options
# --------------------------------------------------

@ARGV = grep !/--use-service/, @ARGV; # deprecated parameter
my $plugin = Bloonix::Plugin->new(version => "0.5");
$plugin->flags("sudo");

$plugin->add_option(
    name => "Service name",
    option => "service",
    value => "service",
    value_type => "string",
    mandatory => 1,
    regex => qr/^[\w\-.]+\z/,
    description => "This is the service name you want to check."
);

$plugin->info(join(" ",
    "This plugin tries to determine automatically the method to check the status of a service.",
    "At first the plugin searchs for 'systemctl', then for 'service' and then the plugin checks",
    "if /etc/init.d/service-name exists."
));

$plugin->example(
    description => [
        "An example to check service httpd:",
        "",
        "- return OK if the return value is 0",
        "- return CRITICAL if the return value is higher than 0"
    ],
    arguments => [
        service => "httpd"
    ]
);

# --------------------------------------------------
# Parse options
# --------------------------------------------------

my $opt = $plugin->parse_options;
my $command;
my $service;

foreach my $svc (qw/systemctl service/) {
    $command = qx{which $svc};
    chomp $command;
    if (-x $command) {
        $service = $svc;
        last;
    }
}

if (!$service && -x "/etc/init.d/$opt->{service}") {
    $service = "sysVinit";
}

if (!$service) {
    $plugin->exit(
        status => "UNKNOWN",
        message => "unable to find method to check the status of the service"
    );
}

if ($service eq "sysVinit") {
    $command = "/etc/init.d/$opt->{service} status";
} elsif ($service eq "systemctl") {
    $command = "systemctl status $opt->{service}.service";
} elsif ($service eq "service") {
    $command = "$service $opt->{service} status";
}

# --------------------------------------------------
# Check the service
# --------------------------------------------------

my $output = qx{$command 2>&1};
my $errcode = $? >> 8;

if ($errcode == 0) {
    $plugin->exit(
        status => "OK",
        message => "service $opt->{service} up and running"
    );
}

$plugin->exit(
    status => "CRITICAL",
    message => "service $opt->{service} returns exit code $errcode"
);
